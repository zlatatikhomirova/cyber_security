def encode(text: str, shift: int=22, de: bool=False) -> str:
    # функция для шифрования, которая также может дешифровать зашифрованный код, если de = True
    # по умолчанию de = False, т.е. строчка шифруется
    # сдвиг задан по умолчанию номером фамилии в списке
    # алфавит для шифрования
    alphabet = 'АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ'
    # инициализируем результирующую строку
    result = ''
    # по умолчанию мы в кольце делаем сдвиг вправо (операция сдвига: индекс буквы в алфавите <оператор> на сколько сдвинуть)
    func = lambda idx, shift: idx + shift
    # если нужно расшифровать строку, то мы делаем сдвиг влево
    if de:
        func = lambda idx, shift: idx - shift
    # проходимся по входному тексту
    for letter in text:
        # если текущая буква из входного текста есть в строке-алфавите для шифрования
        if letter in alphabet:
            # находим индекс буквы из алфавита, 
            # которую надо будет поставить
            # в результирующей строке на место target,
            # соответствующее месту текущей букве в исходном тексте 
            # (1) получаем индекс буквы в алфавите
            # (2) в кольце 0..len(alphabet) находим индекс,
            # который будет соответствовать букве,
            # которую нужно будет вставить на target.
            # кольцо нужно, чтобы 'закольцевать' строку,
            # строить шифр последовательно
            idx = func(alphabet.index(letter), shift) % len(alphabet)
            # добавляем найденную букву в результирующую строку
            result += alphabet[idx]
        else:
            # если в алфавите такой буквы нет, 
            # то добавляем её в результирующую строку без изменений.
            result += letter
    # возвращаем результирующую строку
    return result

# вводим текст
text = input("Введите текст: ").upper()

# закодировать текст
encoded_text = encode(text)
# раскодировать текст для проверки
decoded_text = encode(encoded_text, de=True)

# выводим результаты
print("Зашифрованный текст:  ", encoded_text)
print("Расшифрованный текст:", decoded_text)
